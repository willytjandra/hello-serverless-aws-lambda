name: Hello CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.413"
      - name: Build & Package
        run: |
          chmod +x ./build.sh
          ./build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: hello-lambda
          path: ${{ github.workspace }}/bin/Release/netcoreapp3.1/hello.zip
          if-no-files-found: error

  deploy-qa:
    name: Deploy to QA
    if: github.event.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: qa
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ARTIFACT_PATH: ${{ github.workspace }}/artifacts
      GITHUB_REPO_URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: hello-lambda
          path: ${{ env.ARTIFACT_PATH }}
      - name: Deploy
        run: |
          npm i -g serverless
          sls deploy -s qa -r ap-southeast-2

  deploy-uat:
    name: Deploy to UAT
    if: github.event.ref == 'refs/heads/main'
    needs: [deploy-qa]
    runs-on: ubuntu-latest
    environment:
      name: uat
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ARTIFACT_PATH: ${{ github.workspace }}/artifacts
      GITHUB_REPO_URL: https://github.com/${{ github.repository }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: hello-lambda
          path: ${{ env.ARTIFACT_PATH }}
      - name: Deploy
        run: |
          npm i -g serverless
          sls deploy -s uat -r ap-southeast-2
